trigger: none

variables:
- group: DevSquad.RunningRecords.Backend

stages:
- stage: continuous_deployment
  displayName: 'Continuous Deployment'
  jobs:
  
  - deployment: build_validate
    displayName: build image and deploy into k8s
    environment: $(Environment)
    
    pool:
      name: Default
      demands:
      - agent.name -equals ALEJANDRO-OSPINO
    
    strategy:
      runOnce:
        deploy: 
          steps:
          - task: DownloadBuildArtifacts@1
            displayName: Download app atrifacts
            inputs:
              buildType: 'specific'
              project: 'DevSquad.RunningRecords.Backend'
              pipeline: 'DevSquad.RunningRecords.Backend-CI'
              specificBuildWithTriggering: true
              buildVersionToDownload: 'latest'
              downloadType: 'single'
              artifactName: 'Artifacts'
              downloadPath: '$(System.DefaultWorkingDirectory)'
              
          - task: Docker@2
            displayName: Docker Build & Push
            inputs:
              containerRegistry: '$(dockerRegistrySC)'
              repository: 'img-$(Build.Repository.Name)-Api'
              command: 'buildAndPush'
              Dockerfile: 'Artifacts/Dockerfile'
              buildContext: '$(System.DefaultWorkingDirectory)'
              tags: |
                latest
                $(Build.BuildId)
          
          - task: HelmDeploy@0
            displayName: "Helm upgrade"
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceConnection: '$(kubernetesSC)'
              namespace: '$(kubernetesNamespace)'
              command: 'upgrade'
              chartType: 'FilePath'
              chartPath: '$(System.DefaultWorkingDirectory)/DevSquad.RunningRecords.Backend-CI/Manifests/running-records-api'
              releaseName: 'running-records-api'
              valueFile: '$(System.DefaultWorkingDirectory)/DevSquad.RunningRecords.Backend-CI/Manifests/running-records-api/values.dev.yaml'
              arguments: '--set image.repository=img-celsia.blockchainder.clientes.backend-api --set image.tag=latest'
              failOnStderr: true
